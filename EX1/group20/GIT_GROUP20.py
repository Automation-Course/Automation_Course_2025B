# -*- coding: utf-8 -*-
"""PY_Code_Automation_ex1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18jZZAq62cEz0VzBnxAyTQ73hB2fn8xId
"""

# check if binary input is only 0 or 1
def is_valid_binary(s):
    for ch in s:
        if ch != '0' and ch != '1':
            return False
    return True

# check if hexa input is number or a-f or A-F
def is_valid_hexadecimal(s):
    for ch in s:
        if not (
            ('0' <= ch <= '9') or
            ('a' <= ch <= 'f') or
            ('A' <= ch <= 'F')
        ):
            return False
    return True

# ask the user for original base, support only 2 or 16
print("enter the base of the number (binary - 2, hexadecimal - 16):")
base_input_str = input()

# check if base is not 2 or 16
if base_input_str != '2' and base_input_str != '16':
    print("invalid base. only 2 and 16 are supprted")
else:
    base_input = int(base_input_str)

    # ask the user for number in the base
    print("enter the number in this base:")
    number_str = input()

    if number_str.strip() == "":
        print("error. no input was given.")
    elif base_input == 2:
        if not is_valid_binary(number_str):
            print("error. binary must be only 0 and 1")
        else:
            number = int(number_str, 2)
            print("hexadecimal:", hex(number)[2:].upper())
    elif base_input == 16:
        if not is_valid_hexadecimal(number_str):
            print("error. hexadecimal must be 0-9 or a-f")
        else:
            number = int(number_str, 16)
            print("binary:", bin(number)[2:])